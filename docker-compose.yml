version: "3.8"
services:
  frontend:
    build:
      dockerfile: dockerfile.dev
      context: ./frontend
    container_name: frontend
    ports:
      - "5173:5173"
    # volumes:
    #   - /app/node_modules
    #   - ./frontend:/app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    stdin_open: true
  nginx:
    restart: always #서버 정지시 정책
    build:
      dockerfile: dockerfile
      context: ./nginx
    container_name: nginx
    # volumes추가!
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf # Nginx 설정을 호스트에서 수정 가능
    ports:
      - "8082:80"
    depends_on:
      - frontend
      - backend
  backend:
    build:
      dockerfile: dockerfile
      context: ./backend
    container_name: backend
    ports:
       - "8080:8080"
    volumes:
      - ./backend/gradle:/app/gradle
      - ./backend/gradlew:/app/gradlew
      - ./backend/settings.gradle:/app/settings.gradle
      - ./backend/build.gradle:/app/build.gradle
      - ./backend:/app
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://app_db:3306/IDE_DB?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
      - SPRING_DATASOURCE_USERNAME=chiyomomo
      - SPRING_DATASOURCE_PASSWORD=shamimomo56562
    depends_on:
      - mysql
      - redis

  mysql:
    image: mysql:8
    restart: unless-stopped
    container_name: app_db
    volumes:
      - ./mysql/mysql_data:/var/lib/mysql
      - ./mysql/sqls:/docker-entrypoint-initdb.d/
    environment:
      MYSQL_ROOT_PASSWORD: shamimomo56562
      MYSQL_DATABASE: IDE_DB
      MYSQL_USER: chiyomomo
      MYSQL_PASSWORD: shamimomo56562
    ports:
      - "3307:3306"
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6380:6379"
    volumes:
      - ./redis/data:/data
    environment:
      - REDIS_PASSWORD=shamimomo56562
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "shamimomo56562"]